spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 100000MB  # 개별 파일당 최대 크기
      max-request-size: 100000MB  # 한 번의 요청에서 전체 업로드 가능한 크기
  # MySQL 설정
  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect

  # MongoDB & Redis 설정
  data:
    mongodb:
      uri: ${MONGODB_URI}
      authentication-database: admin
    redis:
      host: ${REDIS_HOST}
      port: 6379
      password: ${REDIS_PASSWORD}
  
  # Kafka 설정
  kafka:
    bootstrap-servers: ${KAFKA_HOST}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: streaming-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
        spring.json.value.default.type: "com.ccc.ari.global.event.StreamingEvent"

  # S3 설정 추가
  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      region:
        static: ap-northeast-2
      s3:
        bucket: ${AWS_S3_BUCKET_NAME}

# 서버 포트 설정
server:
  port: 8080
